##### On JHPCE
######### Data Preprocessing
#### 
BOOT = TRUE
correlation = T
adjust = F
ivwpackage = T
stage2.conduct = T
GWAS = FALSE
###############

K=3
traitvec = c('IL6','IL16','TNF')
exposure = 'inflammation'
outcome = 'sbp'
sd.outcome = (outcome == 'sbp') * 19.3 + (outcome == 'dbp') * 10.5
### IL6, IL16, TNF
N.biomarker = c(8189,3483,8186)
names(N.biomarker) = traitvec
sd.biomarkers = c(49.9,47.8,85.5) 
names(sd.biomarkers) = traitvec
thetak.sign = c(1,1,1)[1:K]

multiplebiom = T
if (multiplebiom == T) {methods = c(paste0('IVW.',traitvec),'GMM')}
if (multiplebiom == F) {methods = c('IVW','GMM')}
setwd("/users/jjin/mr/")
library(mvtnorm)
library(devtools)
library(lavaan)
library(gdata)
library(xtable)
library(MASS) # for the ginv
library(data.table)
library(corpcor) #for pseudoinverse
library(parallel)
library(MendelianRandomization) # for mr_ivw
library(dplyr)
library(readr)
library(R.utils) # for gzip
library(stringr) # for str_detect
library(genio) # a package to facilitate reading and writing genetics data. The focus of this vignette is processing plink BED/BIM/FAM files.
library(MRMix)
library(dplyr)
source("code/gmm_functions_datanalysis.R")
source("code/functions_inflammation.R")
ldsc.out.path="/dcl01/chatterj/data/jin/ldsc.out/"
ldsc.path = "/dcl01/chatterj/data/jin/ldsc/"
python.path = "~/anaconda2/bin/python" #cannot be default! change to anaconda2
ldscore.path = file.path(ldsc.path,"eur_w_ld_chr/") # default, does not need to be specified
### for file transfer between local and cluster
mydir = '/dcl01/chatterj/data/jin/ldclump/'
refdir = '/dcl01/chatterj/data/diptavo/1KG/'

n.boot = 1000
iter.max = 5e2
type = "union"
alpha = 5e-8 # significance level for the selection of IVs
alpha0 = 5e-2
z = qnorm(p=alpha/2,lower.tail=FALSE)
z0 = qnorm(p=alpha0/2,lower.tail=FALSE)


#### filtering parameters
maf.thr = 0.01 #(default in function preprocess)
####################################################################################################
##################################### Step 1: Data Preprocessing ###################################
######## Merge: match SNPs between biomarkers using rsid; ##########################################
######## Standardization of the biomarker data (/se(trait)) ########################################
######## SNP filtering for biomarkers:
############### 1. with MAF<0.01
############### 2. with effective sample size < 0.67 * 0.9 percentile
############### 3. within the major histocompatibility complex (MHC) region ( 26Mb \~ 34Mb on chromosome 6)
############### 4. alleles do not match those in the 1000 Genomes Project.
######## Select SNPs that reach GWAS significance
######## Standardization of the outcome data
######## SNP filtering for the outcome data
############### 1. with MAF<0.01, no need
############### 2. with effective sample size < 0.67 * 0.9 percentile
############### 3. within the major histocompatibility complex (MHC) region ( 26Mb \~ 34Mb on chromosome 6), no need
############### 4. alleles do not match those in the 1000 Genomes Project, no need
######## Match SNPs between biomarkers and the outcome by chr:loc ##################################
######## Calculate the correlation between summary statistics


####################################################################################################
############ read summary data
load("code/inflammation_biomarkers_commonloc.RData")
sumstats = list()
sumstats[[1]] = read_delim('/dcl01/chatterj/data/jin/summary_data/IL6.data', delim = ' ') 
# MarkerName  Chromosome Position OtherAllele EffectAllele  Effect StdErr Direction P.value HetPVal
sumstats[[1]] = sumstats[[1]][sumstats[[1]]$MarkerName %in% Loc$MarkerName,-c(8,10)]
sumstats[[2]] = read_delim('/dcl01/chatterj/data/jin/summary_data/IL16.data', delim = ' ')
sumstats[[2]] = sumstats[[2]][sumstats[[2]]$MarkerName %in% Loc$MarkerName,-c(8,10)]
sumstats[[3]] = read_delim('/dcl01/chatterj/data/jin/summary_data/TNFa.data', delim = ' ')
sumstats[[3]] = sumstats[[3]][sumstats[[3]]$MarkerName %in% Loc$MarkerName,-c(8,10)]
names(sumstats) = traitvec
###### Read HM3 SNP info:
hm3.snplist = read_delim("/dcl01/chatterj/data/jin/ldsc/w_hm3.snplist",delim="\t")
###### Extract SNPs that are in hm3 snplist:
for (i in 1:length(sumstats))
{
  sumstats[[i]] = sumstats[[i]] %>%
    mutate(N=N.biomarker[i])
  colnames(sumstats[[i]]) = c("rsid","Chr","Pos","A2","A1","beta","se","P","N")
  sumstats[[i]] = sumstats[[i]][sumstats[[i]]$rsid %in% hm3.snplist$SNP,]
}
save(sumstats,file='code/sumstats.inflammation3.RData')



###### done locally:
load('summary_data/sumstats.inflammation3.RData')
##### Calculate correlation between summary statistics:
covresults = covinfo_inflammation(sumstats, out.path=ldsc.out.path, ldsc.path, python.path, ldscore.path = file.path(ldsc.path,"eur_w_ld_chr/"), maf.thr, mergeallele = TRUE, data.prep = F, K, screening = F)
#coherit.mat: Genetic covariance matrix
#ldscint.mat: LD score regression intercept matrix.
cor.mat = covresults$ldscint.mat
save(cor.mat,file="cor.mat.inflammation3.RData")



